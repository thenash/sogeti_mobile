# Suppress: EC112

# EditorConfig is awesome: http://EditorConfig.org
# Some properties found at: https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-code-style-settings-reference

# top-most EditorConfig file
root = true

# Use spaces when indenting
[*]
indent_style             = space
insert_final_newline     = false
trim_trailing_whitespace = true

# Code files
[*.{cs,csx,css,js}]
indent_size = 4

# XML code files
[*.{xaml,xml}]
indent_size = 2

# XML project files
[*.{csproj,vbproj,vcxproj,vcxproj.filters,proj,projitems,shproj}]
indent_size = 2

# XML config files
[*.{props,targets,ruleset,config,nuspec,resx,vsixmanifest,vsct}]
indent_size = 2

# JSON files
[*.json]
indent_size = 2

[*.js]
quote_type                = single:suggestion
space_after_anon_function = true
curly_bracket_next_line   = false

[*.cs]
# Put 'System' using directives first
dotnet_sort_system_directives_first = true:suggestion

# Don't use 'var'
csharp_style_var_for_built_in_types    = false:suggestion
csharp_style_var_when_type_is_apparent = false:suggestion
csharp_style_var_elsewhere             = false:suggestion

# Use object initializer and collection initializer
dotnet_style_object_initializer     = true:warning
dotnet_style_collection_initializer = true:warning

# Do not use 'this.' where not required
dotnet_style_qualification_for_field    = false:suggestion
dotnet_style_qualification_for_property = false:suggestion
dotnet_style_qualification_for_method   = false:suggestion
dotnet_style_qualification_for_event    = false:suggestion

# Use types with a language keyword over the type name (AKA: prefer 'int' over 'Int32')
dotnet_style_predefined_type_for_locals_parameters_members = true:suggestion
dotnet_style_predefined_type_for_member_access             = true:suggestion

# Explicit tuple names
dotnet_style_explicit_tuple_names = true:suggestion

# Use null coalescing and null propagation expressions where possible
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_null_propagation    = true:suggestion

# Prefer expression-bodied members for methods, properties, indexes, accessors
csharp_style_expression_bodied_methods    = true:suggestion
csharp_style_expression_bodied_properties = true:suggestion
csharp_style_expression_bodied_indexers   = true:suggestion
csharp_style_expression_bodied_accessors  = true:suggestion

# Prefer inlined 'out' variables when possible
csharp_style_inlined_variable_declaration = true:suggestion

# Suggest more modern language features when available
csharp_style_pattern_matching_over_is_with_cast_check = true:suggestion
csharp_style_pattern_matching_over_as_with_null_check = true:suggestion
csharp_style_inlined_variable_declaration = true:suggestion
csharp_style_throw_expression             = true:suggestion
csharp_style_conditional_delegate_call    = true:suggestion

# New line handling
csharp_new_line_before_open_brace = none
csharp_new_line_before_else = false
csharp_new_line_before_catch = false
csharp_new_line_before_finally = false
csharp_new_line_before_members_in_object_initializers = false
csharp_new_line_before_members_in_anonymous_types = false
csharp_new_line_within_query_expression_clauses = false

# Indent handling
csharp_indent_case_contents = true
csharp_indent_case_labels = true
csharp_indent_braces = false
# csharp_indent_block_contents = ???

# Spacing handling
csharp_space_after_cast = false
csharp_space_in_declaration_statements = true
csharp_space_before_open_square_brackets = false
csharp_space_within_empty_square_brackets = false
csharp_space_within_square_brackets = false
csharp_space_after_colon_for_base_or_interface_in_type_declaration = true
csharp_space_after_comma = true
csharp_space_after_dot = false
csharp_space_after_semicolon_in_for_statement = true
csharp_space_before_colon_for_base_or_interface_in_type_declaration = true
csharp_space_before_comma = false
csharp_space_before_dot = false
csharp_space_before_semicolon_in_for_statement = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_within_method_declaration_parameter_list_parenthesis = false
csharp_space_within_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_within_method_call_parameter_list_parenthesis = false
csharp_space_within_method_call_empty_parameter_list_parentheses = false
csharp_space_after_keywords_in_control_flow_statements = false
#csharp_space_within_parentheses = ??? (expressions, type_casts, control_flow_statements)
csharp_space_around_operators = before_and_after

####
## Naming Conventions
## These are not yet documented. You can see the PR for the general template:
## (https://github.com/dotnet/roslyn/pull/15065)

# Pascal Casing
dotnet_naming_rule.methods_and_properties_must_be_pascal_case.severity = warning
dotnet_naming_rule.methods_and_properties_must_be_pascal_case.symbols  = method_and_property_symbols
dotnet_naming_rule.methods_and_properties_must_be_pascal_case.style    = pascal_case_style

dotnet_naming_symbols.method_and_property_symbols.applicable_kinds           = method;property;enum
dotnet_naming_symbols.method_and_property_symbols.applicable_accessibilities = *

dotnet_naming_style.pascal_case_style.capitalization = pascal_case

# async methods must end in Async
dotnet_naming_rule.async_methods_must_end_with_async.severity = warning
dotnet_naming_rule.async_methods_must_end_with_async.symbols  = method_symbols
dotnet_naming_rule.async_methods_must_end_with_async.style    = end_in_async_style

dotnet_naming_symbols.method_symbols.applicable_kinds   = method
dotnet_naming_symbols.method_symbols.required_modifiers = async

dotnet_naming_style.end_in_async_style.capitalization  = pascal_case
dotnet_naming_style.end_in_async_style.required_suffix = Async

# Public members must be capitalized
dotnet_naming_rule.public_members_must_be_capitalized.severity = warning
dotnet_naming_rule.public_members_must_be_capitalized.symbols  = public_symbols
dotnet_naming_rule.public_members_must_be_capitalized.style    = first_word_upper_case_style

dotnet_naming_symbols.public_symbols.applicable_kinds   = property;method;field;event;delegate
dotnet_naming_symbols.public_symbols.required_modifiers = public;internal;protected;protected_internal

dotnet_naming_style.first_word_upper_case_style.capitalization = first_word_upper

# Non-public members must be lower-case
dotnet_naming_rule.non_public_members_must_be_lower_case.severity = warning
dotnet_naming_rule.non_public_members_must_be_lower_case.symbols  = non_public_symbols
dotnet_naming_rule.non_public_members_must_be_lower_case.style    = all_lower_case_style

dotnet_naming_symbols.non_public_symbols.applicable_kinds   = property;method;field;event;delegate
dotnet_naming_symbols.non_public_symbols.required_modifiers = private

dotnet_naming_style.all_lower_case_style.capitalization = all_lower